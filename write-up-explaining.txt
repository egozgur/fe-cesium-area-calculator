
Short Explanation:
In the map application I developed using Angular and Cesium, users can draw a rectangle and calculate its area. I adopted an approach to interface design that users can easily use and understand the functions clearly. In this regard, I ensured that the buttons and area were clearly visible and I paid attention to making the functions easily accessible to users. I adopted a modular approach using Angular's component and service structure. This allowed for better organization and increased readability of the application. In practice, I preferred to have each element (e.g. buttons and map) have its own component. This ensured that each element contained its own functionality and style, providing an advantage in terms of reusability. Since the project was not comprehensive, a module structure was not needed. This enabled the application to avoid unnecessary complexity and enable faster development processes. I continued my efforts to write a code with high understandability and readability throughout the process. Tailwind CSS was tried to be used in the design. Calculations were done using sketches and Cesium's TypeScript library. Sensitive information was stored in the environment class.

Challanges Faced:
1-To enable users to draw rectangles on the map, I reviewed the Cesium documentation and managed the interaction using the cesium.directive structure. I calculated the area of the rectangle by taking into account the coordinates in different formats provided by the user and the mathematical complexity. I made verification tests based on the surface area of Turkey in the large size, and the cars on the highways in a rectangle in the small size, and I solved the problems with the help of devTools on the browser.
2-I had no experience with to work on Angular before and my time was limited. For this reason, I decided to gain general knowledge about architecture by reading documentation and doing research on ready-made projects instead of watching videos. I can also say that Angular's module structure caused me to start from scratch more than once while creating the project. In addition, my working tempo under pressure in fixed-term jobs had a positive impact on crisis management. and I managed to develop this project on Angular in a short time.
3-I had no experience with tailwind css, but by constantly testing the developers-tool section in the browser tab and with my pure css knowledge (especially the documents in the tailwindcss.com link were very helpful), I had the opportunity to develop in that section as much as I had time.